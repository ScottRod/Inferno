using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class Player : MonoBehaviour {

	CharacterController cc; // player's character controller, used to move the player and make gravity effect it

	public GameObject Playercamera;

	public Material NormalCameraMaterial; // the camera rendering noramlly

	public Material LavaCameraMaterial; // what the camera looks like when the player is under lava or burning 

	public int Score = 0;

	public string CurrentScene = "Level 1";

	public float Gravity = 1.0f; // gravity strength

	public float JumpPower = 10.0f;

	public bool Dead = false; // the variable that updates whether the 

	public float Health = 100.0f; // current player health

	public GameObject HealthText; // the text that displays the current player health 

	public float Stamina = 100.0f; // current stamina

	public GameObject StaminaText; // the text that displays the current stamina 

	public float Magica = 100.0f; // current magica 

	public float MagicaRegenSpeed = 1.0f; // the regen speed

	public float SpellCastDelay = 0.0f; // the minumum time between spell casts

	public GameObject AquaObject; // the water ball thing that the player can shoot

	public string EquippedSpell = ""; // the current equipped spell 

	public GameObject CurrentWeapon; // current gameobject weapon

	public string EquippedWeapon = ""; // The current equipped weapon as u can see

	public GameObject InventoryObj;

	public GameObject WeaponText;

	public GameObject SpellText;

	//bool InventoryShowing = false; // whether the player is looking at the inventory

	public GameObject AquaSword; // the aqua sword game object

	public GameObject MagicaText; // the text that displays the current magica text

	public float MoveSpeed = 10.0f; // the player speed in meters per second

	public float SprintSpeed = 15.0f; // the player sprint speed

	Vector3 speed = new Vector3(0,0,0); // current player speed in xyz

	public Vector2 LookSenstivity = new Vector3(1,1);

	public float RotateYaw = 0.0f;


	public void SpawnWeapon(string newWeapon) {

		Destroy (CurrentWeapon); 

		if (newWeapon == "Aqua Sword") {

			GameObject newWeaponObj = Instantiate (AquaSword, Playercamera.transform.position + (Vector3.right*1.25f) + Vector3.back, Quaternion.identity);

			newWeaponObj.transform.Rotate (0, 90, 0);

			newWeaponObj.transform.parent = Playercamera.transform;

			CurrentWeapon = newWeaponObj;

		}

		EquippedWeapon = newWeapon;


	}

	// Use this for initialization
	void Start () {

		EquippedSpell = PlayerPrefs.GetString ("Equipped Spell", "Aqua Ball");

		EquippedWeapon = PlayerPrefs.GetString ("Equipped Weapon", "Aqua Sword");

		SpawnWeapon (EquippedWeapon);

		Cursor.visible = false;

		Cursor.lockState = CursorLockMode.Locked;

		// if no character controller is found then it adds one

		if (GetComponent<CharacterController> () != null) {

			cc = GetComponent<CharacterController> (); 


		} else {

			gameObject.AddComponent<CharacterController> ();

			cc = GetComponent<CharacterController> ();

		}
		
	}
	
	// Update is called once per frame
	void Update () {

		if (InventoryObj.activeSelf == true) {

			Cursor.lockState = CursorLockMode.None;

			Cursor.visible = true;

			// updates the equipped spell and weapon text to display the current spell and weapon that the player will be using 

			SpellText.GetComponent<Text> ().text = "Spell: " + EquippedSpell;

			WeaponText.GetComponent<Text> ().text = "Weapon: " + EquippedWeapon;

			Time.timeScale = 0.0f;

		} else {

			Cursor.visible = false;

			Cursor.lockState = CursorLockMode.Locked;

			Time.timeScale = 1.0f;

		}

		if (Input.GetKeyDown ("1")) {

			bool x = false;

			if (InventoryObj.activeSelf == true && x == false) {

				InventoryObj.SetActive (false);

				x = true;

			}

			if (InventoryObj.activeSelf == false && x == false) {

				InventoryObj.SetActive (true);

				x = true;

			}

		}

		// when x is pressed player will go back to menu (Purgatory)

		if (Input.GetKeyDown (KeyCode.X)) {

			SceneManager.LoadScene ("Purgatory"); 

		}

		// when the escape key is pressed then close the progam

		if (Input.GetKeyDown (KeyCode.Escape)) {

			Application.Quit ();

		}

		Magica += Time.deltaTime * MagicaRegenSpeed;

		Magica = Mathf.Clamp (Magica, 0, 100);

		speed.x = 0.0f;

		speed.z = 0.0f;

		if(cc.isGrounded == false) { 

			// gravity

		speed.y += Physics.gravity.y * Time.deltaTime * Gravity;

		}

		if (Dead == false) {

			if (Input.GetButtonDown ("Jump") && cc.isGrounded == true) {

				// makes the player jump

				speed.y = JumpPower;

			}

			// move controls

			speed.x += Input.GetAxis ("Horizontal") * MoveSpeed;

			speed.z += Input.GetAxis ("Vertical") * MoveSpeed;

			// look controls x

			transform.Rotate (0, Input.GetAxis ("Mouse X") * LookSenstivity.x * (Time.deltaTime*60.0f), 0);

			// look controls y

			RotateYaw -= Input.GetAxis ("Mouse Y") * LookSenstivity.y * (Time.deltaTime*60.0f);

			RotateYaw = Mathf.Clamp (RotateYaw, -85, 90);

			// look y

			Playercamera.transform.localRotation = Quaternion.Euler (RotateYaw, 0, 0);

		}

		if (Health <= 0) {

			SceneManager.LoadScene (CurrentScene);

		}

		// sprinting

		Stamina = Mathf.Clamp (Stamina, 0, 100);

		Stamina += Time.deltaTime * 2;

		if (Input.GetKey(KeyCode.LeftShift) && Stamina >= 1 || Input.GetKey(KeyCode.RightShift) && Stamina >= 0) {

			// speeds up the player speed

			speed.x *= 1.5f;  

			speed.z *= 1.5f; 

			if (Input.GetKey (KeyCode.W) || Input.GetKey (KeyCode.S) || Input.GetKey (KeyCode.A) || Input.GetKey (KeyCode.D)) {

				Stamina -= Time.deltaTime * 15;

			}

		}

		SpellCastDelay -= Time.deltaTime;

		if (Input.GetMouseButtonDown(1) && EquippedSpell == "Aqua Ball" && Magica >= 10 && SpellCastDelay <= 0 && InventoryObj.activeSelf == false) { // when the left mouse is clicked

			Magica -= 10.0f;

			GameObject newAqua = Instantiate (AquaObject, transform.position + (transform.rotation * Vector3.forward + new Vector3(0,Playercamera.transform.localPosition.y,0)), Quaternion.identity);

			newAqua.transform.rotation = transform.rotation * Playercamera.transform.localRotation;

			Destroy (newAqua, 5.0f);

			SpellCastDelay = 0.5f;
		
		}

		// updates the text to display the current Health, stamina and magica

		HealthText.GetComponent<Text> ().text = "Health: " + Health;

		StaminaText.GetComponent<Text> ().text = "Stamina: " + Mathf.Floor(Mathf.Clamp(Stamina, 0.999f,100));

		MagicaText.GetComponent<Text> ().text = "Magica: " + Mathf.Floor(Magica);

		cc.Move (transform.rotation * speed * Time.deltaTime); // moves the player
		 
	}

/*
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////                                                 ////////                                    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////                                                 ////////  ///////////////////////////////   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////          //////////////////////////////   ///////////////////////////////     ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         ///////////////////////////////   ///////////////////////////////     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         //////////////////////////////    ///////////////////////////////     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         //////////////////////////////    ///////////////////////////////     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         //////////////////////////////    ////////////////////////////////     ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         //////////////////////////////    ////////////////////////////////    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         ////////////////////////////////                                       ///////////////////////////////////////////////////////////////////////////
/////////////////////         ////////////////////////////////      ///////////       /////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         ////////////////////////////////      /////////////      /////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         ////////////////////////////////      //////////////       //////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         ////////////////////////////////      /////////////////     ///////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         /////////////////////////////////     ///////////////////     ////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         ////////////////////////////////      ////////////////////      ////////////////////////////////////////////////////////////////////////////////////////
/////////////////////         ////////////////////////////////      //////////////////////     //////////////////////////////////////////////////////////////////////////////////////
/////////////////////          ////////////////////////////////     ///////////////////////     /////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





*/

	void OnTriggerEnter(Collider other) {



   }

	void OnTriggerStay(Collider other) {

		if (other.tag == "Lava") {

			Health -= 5.0f;

			Playercamera.GetComponent<CameraMaterialChange> ().newMaterial = LavaCameraMaterial; 

		}

	}

	void OnTriggerExit(Collider other) {

		if (other.tag == "Lava") {

			Playercamera.GetComponent<CameraMaterialChange> ().newMaterial = NormalCameraMaterial;

		}

	}

    void OnCollisionEnter(Collision other) {

		if(other.gameObject.tag == "Fire Ball") { 

		     Health -= 25.0f;

 			Destroy(other.gameObject);

		}

    }

}
